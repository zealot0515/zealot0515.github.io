<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IaC on Pagi&#39;s Blog</title>
    <link>https://zealot0515.github.io/tags/iac/</link>
    <description>Recent content in IaC on Pagi&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 15 May 2019 16:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zealot0515.github.io/tags/iac/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Terraform - aws 建立vpc/subnet</title>
      <link>https://zealot0515.github.io/posts/terraform-aws-%E5%BB%BA%E7%AB%8Bvpc-subnet/</link>
      <pubDate>Wed, 15 May 2019 16:00:00 +0000</pubDate>
      
      <guid>https://zealot0515.github.io/posts/terraform-aws-%E5%BB%BA%E7%AB%8Bvpc-subnet/</guid>
      <description>使用terraform來建立vpc很方便, 可以透過調整參數的方式,
來建立不同的vpc, 在快速佈建測試環境時候很好用。
 variable &amp;quot;vpc_name&amp;quot; {} variable &amp;quot;subnet_tag&amp;quot; {} variable &amp;quot;role_arn&amp;quot; {} variable &amp;quot;vpc_cidr&amp;quot; {} variable &amp;quot;public_subnet1&amp;quot; {} variable &amp;quot;public_subnet2&amp;quot; {} variable &amp;quot;public_subnet3&amp;quot; {} variable &amp;quot;private_subnet1&amp;quot; {} variable &amp;quot;private_subnet2&amp;quot; {} variable &amp;quot;private_subnet3&amp;quot; {} variable &amp;quot;az_1&amp;quot; {} variable &amp;quot;az_2&amp;quot; {} variable &amp;quot;az_3&amp;quot; {} variable &amp;quot;region&amp;quot; {} provider &amp;quot;aws&amp;quot; { region = &amp;quot;${var.region}&amp;quot; } module &amp;quot;vpc&amp;quot; { source = &amp;quot;../../modules/aws-vpc/&amp;quot; name = &amp;quot;${var.vpc_name}&amp;quot; cidr = &amp;quot;${var.vpc_cidr}&amp;quot; azs = [&amp;quot;${var.az_1}&amp;quot;, &amp;quot;${var.az_2}&amp;quot;, &amp;quot;${var.</description>
    </item>
    
    <item>
      <title>Terraform IaC Tool </title>
      <link>https://zealot0515.github.io/posts/terraform-iac-tool/</link>
      <pubDate>Thu, 09 May 2019 13:00:00 +0000</pubDate>
      
      <guid>https://zealot0515.github.io/posts/terraform-iac-tool/</guid>
      <description>Terraform是Hashicorp 公司出品的一個IaC工具,
可以透過程式碼的方式來佈建 Aws的服務,
同時可以在版本更新時候進行最小資源改動,
配合版控更能在意外發生時後, 快速重建服務。
Terraform類似於Aws Cloud Formation, 但不僅僅支援Aws,
更支援其他的雲服務(GCP, Azure &amp;hellip;),
相較學習Cloud Formation僅能用於Aws, 學習Terraform是個更好的選擇。
這邊介紹一下Terraform的安裝, 參照官方的文件, 幾乎所有系統都能使用,
在這文章中我是透過Ubuntu安裝。
# 1. 先更新ubuntu套件庫 sudo apt-get update # 2. 安裝unzip sudo apt-get install unzip # 3. 取得terraform 安裝包 wget https://releases.hashicorp.com/terraform/0.11.13/terraform_0.11.13_linux_amd64.zip # 4. 解開安裝包 unzip terraform_0.11.13_linux_amd64.zip # 5. 將執行檔放到 /usr/local/bin 底下方便後續使用 sudo mv terraform /usr/local/bin/  之後再補充一些IaC 的 寫法</description>
    </item>
    
    <item>
      <title>Terraforming, 用terraform的方式列出aws資源</title>
      <link>https://zealot0515.github.io/posts/terraforming-%E7%94%A8terraform%E7%9A%84%E6%96%B9%E5%BC%8F%E5%88%97%E5%87%BAaws%E8%B3%87%E6%BA%90/</link>
      <pubDate>Wed, 08 May 2019 15:00:00 +0000</pubDate>
      
      <guid>https://zealot0515.github.io/posts/terraforming-%E7%94%A8terraform%E7%9A%84%E6%96%B9%E5%BC%8F%E5%88%97%E5%87%BAaws%E8%B3%87%E6%BA%90/</guid>
      <description>先前在學怎麼寫terraform的時候, 曾經想過如果是既有的服務,
該怎麼透過terraform來做管理, 雖然可以用資源的方式引入,
但量多起來後也是一種困擾。
今天在同事的介紹下知道了Terraforming這個工具,
可以幫我們用terraform的格式列出使用的服務, 簡直方便極了,
還可以透過參數印出tfstate, 取得詳細的參數數據, 方便開發。
github: https://github.com/dtan4/terraforming
terraforming s3  透過上面的指令就能列出aws帳戶下使用的s3服務tf 格式的寫法
resource &amp;quot;aws_s3_bucket&amp;quot; &amp;quot;hoge&amp;quot; { bucket = &amp;quot;hoge&amp;quot; acl = &amp;quot;private&amp;quot; } resource &amp;quot;aws_s3_bucket&amp;quot; &amp;quot;fuga&amp;quot; { bucket = &amp;quot;fuga&amp;quot; acl = &amp;quot;private&amp;quot; }  加入 &amp;ndash;tfstate後則可列出詳細參數
terraforming s3 --tfstate { &amp;quot;version&amp;quot;: 1, &amp;quot;serial&amp;quot;: 1, &amp;quot;modules&amp;quot;: { &amp;quot;path&amp;quot;: [ &amp;quot;root&amp;quot; ], &amp;quot;outputs&amp;quot;: { }, &amp;quot;resources&amp;quot;: { &amp;quot;aws_s3_bucket.hoge&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;aws_s3_bucket&amp;quot;, &amp;quot;primary&amp;quot;: { &amp;quot;id&amp;quot;: &amp;quot;hoge&amp;quot;, &amp;quot;attributes&amp;quot;: { &amp;quot;acl&amp;quot;: &amp;quot;private&amp;quot;, &amp;quot;bucket&amp;quot;: &amp;quot;hoge&amp;quot;, &amp;quot;id&amp;quot;: &amp;quot;hoge&amp;quot; } } }, &amp;quot;aws_s3_bucket.</description>
    </item>
    
  </channel>
</rss>